Session 1


1.Create a class and with divide two numbers by using Scanner class.(z=a/b).without try catch.
package my.exceptionHandling;
import java.util.Scanner;	
public class exception1 {
		public static void main(String[] args) {
			Scanner sc=new Scanner(System.in);
			System.out.println("Enter the First number:");
			int n1=sc.nextInt();
			System.out.println("Enter the Second Number:");
			int n2=sc.nextInt();
			int n3=n1/n2;
			System.out.println("Division of the number is :"+n3);
			System.out.println("Not divided by zero:")
		}
}

OUTPUT:

Enter the First number:
10
Enter the Second Number:
5
Division of the number is :2
Not divided by zero:



2.create a class and take the input from by using scanner class, as a end user take two numbers with division and observe which type of exception raised. and apply try catch blocks
package my.exceptionHandling;
import java.util.Scanner;
public class exception1 {
		public static void main(String[] args) {
			Scanner sc=new Scanner(System.in);
			System.out.println("Enter the First number:");
			int n1=sc.nextInt();
			System.out.println("Enter the Second Number:");
			int n2=sc.nextInt();
			try {
				int n3=n1/n2;
				System.out.println("Division of the number is :"+n3);
			}
		
			catch(ArithmeticException ae) {
				System.out.println("Number is not divided by Zero");
			}		
		}
}
      OUTPUT:
Enter the First number:
20
Enter the Second Number:
0
Number is not divided by Zero





3.create a class with Marks, and valid Marks method, give some number marks are less than he/she fails otherwise pass by using throw keyword.
package my.exceptionHandling;
public class throwEx {
     	public void marks(int marks) {
    	 	if (marks<35) {
    		 	throw new ArithmeticException("You Failed...");
    	 	}
    	 	else {
    		 	System.out.println("You pass the exam...");
    	 	}
     	}
     	public static void main(String[] args) {
			throwEx t=new throwEx();
			t.marks(20);
			System.out.println("this shows the result ...");
}
}
OUTPUT:
   Exception in thread "main" java.lang.ArithmeticException: You Failed...
	at exceptionHandling/my.exceptionHandling.throwEx.marks(throwEx.java:6)
       at exceptionHandling/my.exceptionHandling.throwEx.main(throwEx.java:14)







Session 2

1.Create a class with single try multi catch blocks.
package my.exceptionHandling;
public class EXCEPTION2 {
		public static void main(String[] args) {
			try {
				int[] a= new int[5];
				a[5]=20/5;
				String s="null";
				int x=Integer.parseInt(s);
				System.out.println("Hello");
				System.out.println("Divison Method:");
			}
			catch(ArithmeticException ae) {
				System.out.println("can't divide the number by zero...");
				System.out.println(ae);
			}
			catch(ArrayIndexOutOfBoundsException a) {
				System.out.println("Enter valid Index of Array....");
				System.out.println(a);
			}
			catch(NumberFormatException ne) {
				System.out.println("String cannot be converted in integer...");
			}
			catch(Exception e) {
				System.out.println("not able to find the length of string ....");
			}
			finally {
				System.out.println("Execute the program 100 times....");
			
			}
			System.out.println("Remaining code is there....");
		}
}

OUTPUT:

    Enter valid Index of Array....
    java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 5
    Execute the program 100 times....
    Remaining code is there....






2.create a class with user defined exceptions.
package my.exceptionHandling;

class MyException extends Exception{
		private int age;
		public MyException(int age) {
			this.age =age;
		}
		public String toString(int age) {
			return "You are not eligible";
		}
}
    public class userdefined {
		void data(int age) throws MyException {
			if(age<18) {
				throw new MyException(age);
			}
			else {
				System.out.println("You are eligible for the vote..");
			}
		}
		public static void main(String[] args) throws MyException {
			userdefined s=new userdefined();
			s.data(12);
		}
}
OUTPUT:
Exception in thread "main" my.exceptionHandling.MyException
at exceptionHandling/my.exceptionHandling.userdefined.data(userdefined.java:18)
at exceptionHandling/my.exceptionHandling.userdefined.main(userdefined.java:26)















